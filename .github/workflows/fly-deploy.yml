
name: Fly Deploy
on:
  push:
    branches:
      - master
jobs:
  deploy:
    name: Deploy app
    runs-on: ubuntu-latest
    concurrency: deploy-group    # optional: ensure only one action runs at a time
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Ensure volume exists (data)
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
          FLY_APP_NAME: ${{ vars.FLY_APP_NAME }}
          FLY_REGION: ${{ vars.FLY_REGION }}
        run: |
          set -e
          APP=${FLY_APP_NAME:-$(awk -F'"' '/^app\s*=/{print $2; exit}' fly.toml)}
          REGION=${FLY_REGION:-$(awk -F'"' '/^primary_region\s*=/{print $2; exit}' fly.toml)}
          echo "App=${APP} Region=${REGION}"
          set +e
          flyctl volumes list --app "$APP" | grep -q " data "
          HASVOL=$?
          set -e
          if [ "$HASVOL" -ne 0 ]; then
            flyctl volumes create data --size 1 --region "$REGION" --app "$APP"
          fi

      - name: Set runtime secrets (optional)
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
          FLY_APP_NAME: ${{ vars.FLY_APP_NAME }}
          AUTH_ENABLED: ${{ secrets.AUTH_ENABLED }}
          AUTH_SALT: ${{ secrets.AUTH_SALT }}
          AUTH_USERS_JSON: ${{ secrets.AUTH_USERS_JSON }}
        run: |
          set -e
          APP=${FLY_APP_NAME:-$(awk -F'"' '/^app\s*=/{print $2; exit}' fly.toml)}

          # どれか一つでもセットされていれば実行、全部空ならスキップ
          if [ -z "${AUTH_ENABLED}${AUTH_SALT}${AUTH_USERS_JSON}" ]; then
            echo "No auth-related secrets provided; skipping secrets set."
            exit 0
          fi

          if [ -n "$AUTH_ENABLED" ]; then
            flyctl secrets set AUTH_ENABLED="$AUTH_ENABLED" --app "$APP"
          fi
          if [ -n "$AUTH_SALT" ]; then
            flyctl secrets set AUTH_SALT="$AUTH_SALT" --app "$APP"
          fi
          if [ -n "$AUTH_USERS_JSON" ]; then
            # JSONはクォート崩れしやすいので必ずダブルクォートで包む
            flyctl secrets set AUTH_USERS_JSON="$AUTH_USERS_JSON" --app "$APP"
          fi

      - name: Deploy
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          flyctl deploy --remote-only

